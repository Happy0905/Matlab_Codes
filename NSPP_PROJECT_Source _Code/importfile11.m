%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Author: Mathan Kumar Moorthy
% Organization: ASU - PhotoVoltaic Reliability Laboratory
% Date: 11/04/2015
% Code details: This code is used for  
% importing Safety failures visual inspection data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function tableout = importfile11(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE11 Import data from a spreadsheet
%   IMPORTFILE11(FILE) reads data from the first worksheet in the Microsoft
%   Excel spreadsheet file named FILE and returns the data as a table.
%
%   IMPORTFILE11(FILE,SHEET) reads from the specified worksheet.
%
%   IMPORTFILE11(FILE,SHEET,STARTROW,ENDROW) reads from the specified
%   worksheet for the specified row interval(s). Specify STARTROW and
%   ENDROW as a pair of scalars or vectors of matching size for
%   dis-contiguous row intervals. To read to the end of the file specify an
%   ENDROW of inf.%
% Example:
%   importfile11('VI.xlsx','Sheet1',2,745);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2015/08/04 12:56:46

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 2;
    endRow = 2000;
end

%% Import the data
[~, ~, raw1] = xlsread(workbookFile, sheetName, sprintf('A%d:A%d',startRow(1),endRow(1)));
[~, ~, raw2] = xlsread(workbookFile, sheetName, sprintf('D%d:D%d',startRow(1),endRow(1)));
[~, ~, raw3] = xlsread(workbookFile, sheetName, sprintf('F%d:F%d',startRow(1),endRow(1)));
[~, ~, raw4] = xlsread(workbookFile, sheetName, sprintf('J%d:K%d',startRow(1),endRow(1)));
[~, ~, raw5] = xlsread(workbookFile, sheetName, sprintf('Q%d:U%d',startRow(1),endRow(1)));
[~, ~, raw6] = xlsread(workbookFile, sheetName, sprintf('AA%d:AA%d',startRow(1),endRow(1)));
[~, ~, raw7] = xlsread(workbookFile, sheetName, sprintf('AC%d:AF%d',startRow(1),endRow(1)));
[~, ~, raw8] = xlsread(workbookFile, sheetName, sprintf('AH%d:AH%d',startRow(1),endRow(1)));
[~, ~, raw9] = xlsread(workbookFile, sheetName, sprintf('AP%d:AR%d',startRow(1),endRow(1)));
[~, ~, raw10] = xlsread(workbookFile, sheetName, sprintf('AT%d:AX%d',startRow(1),endRow(1)));
[~, ~, raw11] = xlsread(workbookFile, sheetName, sprintf('BP%d:BP%d',startRow(1),endRow(1)));
[~, ~, raw12] = xlsread(workbookFile, sheetName, sprintf('BY%d:BY%d',startRow(1),endRow(1)));
raw = [raw1,raw2,raw3,raw4,raw5,raw6,raw7,raw8,raw9,raw10,raw11,raw12];
for block=2:length(startRow)
    [~, ~, tmpRawBlock1] = xlsread(workbookFile, sheetName, sprintf('A%d:A%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock2] = xlsread(workbookFile, sheetName, sprintf('D%d:D%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock3] = xlsread(workbookFile, sheetName, sprintf('F%d:F%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock4] = xlsread(workbookFile, sheetName, sprintf('J%d:K%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock5] = xlsread(workbookFile, sheetName, sprintf('Q%d:U%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock6] = xlsread(workbookFile, sheetName, sprintf('AA%d:AA%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock7] = xlsread(workbookFile, sheetName, sprintf('AC%d:AF%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock8] = xlsread(workbookFile, sheetName, sprintf('AH%d:AH%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock9] = xlsread(workbookFile, sheetName, sprintf('AP%d:AR%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock10] = xlsread(workbookFile, sheetName, sprintf('AT%d:AX%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock11] = xlsread(workbookFile, sheetName, sprintf('BP%d:BP%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock12] = xlsread(workbookFile, sheetName, sprintf('BY%d:BY%d',startRow(block),endRow(block)));
    raw = [raw;tmpRawBlock1,tmpRawBlock2,tmpRawBlock3,tmpRawBlock4,tmpRawBlock5,tmpRawBlock6,tmpRawBlock7,tmpRawBlock8,tmpRawBlock9,tmpRawBlock10,tmpRawBlock11,tmpRawBlock12]; %#ok<AGROW>
end
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
cellVectors = raw(:,1);
raw = raw(:,[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]);

%% Create output variable
I = cellfun(@(x) ischar(x), raw);
raw(I) = {NaN};
data = reshape([raw{:}],size(raw));

%% Create table
tableout = table;

%% Allocate imported array to column variable names
tableout.Module = cellVectors(:,1);
tableout.Frontglasscrack = data(:,1);
tableout.Frontglassshattered = data(:,2);
tableout.Rearglasscrack = data(:,3);
tableout.Rearglassshattered = data(:,4);
tableout.Framegroundingseverecorrosion = data(:,5);
tableout.Framegroundingminorcorrosion = data(:,6);
tableout.Framemajorcorrosion = data(:,7);
tableout.Framejointseparation = data(:,8);
tableout.Framecracking = data(:,9);
tableout.BypassdiodeopencircuitEquipmentneeded = data(:,10);
tableout.Junctionboxcrack = data(:,11);
tableout.Junctionboxburn = data(:,12);
tableout.Junctionboxloose = data(:,13);
tableout.Junctionboxlidfelloff = data(:,14);
tableout.Junctionboxlidcrack = data(:,15);
tableout.Wiresinsulationcrackeddisintegrated = data(:,16);
tableout.Wiresburnt = data(:,17);
tableout.Wiresanimalbitesmarks = data(:,18);
tableout.Backsheetpeeling = data(:,19);
tableout.Backsheetdelamination = data(:,20);
tableout.Backsheetburnmark = data(:,21);
tableout.Backsheetcrackcutundercell = data(:,22);
tableout.Backsheetcrackcutbetweencells = data(:,23);
tableout.StringInterconnectarctracks = data(:,24);
tableout.Hotspotover20CEquipmentneeded = data(:,25);

