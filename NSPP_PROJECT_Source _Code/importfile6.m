%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Author: Mathan Kumar Moorthy
% Organization: ASU - PhotoVoltaic Reliability Laboratory
% Date: 11/04/2015
% Code details: This code is used for  
% importing Visual Inspection data
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function tableout = importfile6(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE6 Import data from a spreadsheet
%   DATA = IMPORTFILE6(FILE) reads data from the first worksheet in the
%   Microsoft Excel spreadsheet file named FILE and returns the data as a
%   table.
%
%   DATA = IMPORTFILE6(FILE,SHEET) reads from the specified worksheet.
%
%   DATA = IMPORTFILE6(FILE,SHEET,STARTROW,ENDROW) reads from the specified
%   worksheet for the specified row interval(s). Specify STARTROW and
%   ENDROW as a pair of scalars or vectors of matching size for
%   dis-contiguous row intervals. To read to the end of the file specify an
%   ENDROW of inf.%
% Example:
%   VI = importfile6('VI.xlsx','Sheet1',2,505);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2015/04/02 13:21:57

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 2;
    endRow = 2000;
end

%% Import the data
[~, ~, raw] = xlsread(workbookFile, sheetName, sprintf('A%d:CI%d',startRow(1),endRow(1)));
for block=2:length(startRow)
    [~, ~, tmpRawBlock] = xlsread(workbookFile, sheetName, sprintf('A%d:CI%d',startRow(block),endRow(block)));
    raw = [raw;tmpRawBlock]; %#ok<AGROW>
end
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
cellVectors = raw(:,1);
raw = raw(:,[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87]);

%% Create output variable
I = cellfun(@(x) ischar(x), raw);
raw(I) = {NaN};
data = reshape([raw{:}],size(raw));

%% Create table
tableout = table;

%% Allocate imported array to column variable names
tableout.Module = cellVectors(:,1);
tableout.Frontglasslightlysoiled = data(:,1);
tableout.Frontglassheavilysoiled = data(:,2);
tableout.Frontglasscrack = data(:,3);
tableout.Frontglasscrazing = data(:,4);
tableout.Frontglassshattered = data(:,5);
tableout.Frontglasschip = data(:,6);
tableout.Frontglassmilkydiscoloration = data(:,7);
tableout.Rearglasscrazing = data(:,8);
tableout.Rearglasscrack = data(:,9);
tableout.Rearglassshattered = data(:,10);
tableout.Rearglasschipped = data(:,11);
tableout.Edgesealdelamination = data(:,12);
tableout.Edgesealmoisturepenetration = data(:,13);
tableout.Edgesealdiscoloration = data(:,14);
tableout.Edgesealsqueezedpinchedout = data(:,15);
tableout.Framegroundingseverecorrosion = data(:,16);
tableout.Framegroundingminorcorrosion = data(:,17);
tableout.Framemajorcorrosion = data(:,18);
tableout.Framejointseparation = data(:,19);
tableout.Framecracking = data(:,20);
tableout.Framebent = data(:,21);
tableout.Framediscoloration = data(:,22);
tableout.Frameadhesivedegraded = data(:,23);
tableout.Frameadhesiveoozedout = data(:,24);
tableout.Frameadhesivemissinginareas = data(:,25);
tableout.BypassdiodeopencircuitEquipmentneeded = data(:,26);
tableout.BypassdiodeshortcircuitEquipmentneeded = data(:,27);
tableout.Junctionboxcrack = data(:,28);
tableout.Junctionboxburn = data(:,29);
tableout.Junctionboxloose = data(:,30);
tableout.Junctionboxlidfelloff = data(:,31);
tableout.Junctionboxlidloose = data(:,32);
tableout.Junctionboxlidcrack = data(:,33);
tableout.Junctionboxwarped = data(:,34);
tableout.Junctionboxweathered = data(:,35);
tableout.Junctionboxadhesiveloose = data(:,36);
tableout.Junctionboxadhesivefelloff = data(:,37);
tableout.Junctionboxwireattachmentsloose = data(:,38);
tableout.Junctionboxwireattachmentsfelloff = data(:,39);
tableout.Junctionboxwireattachmentsarced = data(:,40);
tableout.Wiresinsulationcrackeddisintegrated = data(:,41);
tableout.Wiresburnt = data(:,42);
tableout.Wiresanimalbitesmarks = data(:,43);
tableout.Wirescorroded = data(:,44);
tableout.Backsheetpeeling = data(:,45);
tableout.Backsheetdelamination = data(:,46);
tableout.Backsheetburnmark = data(:,47);
tableout.Backsheetcrackcutundercell = data(:,48);
tableout.Backsheetcrackcutbetweencells = data(:,49);
tableout.Backsheetwavy = data(:,50);
tableout.Backsheetdiscoloration = data(:,51);
tableout.Backsheetbubble = data(:,52);
tableout.Gridlinediscoloration = data(:,53);
tableout.Gridlineblossoming = data(:,54);
tableout.Busbardiscoloration = data(:,55);
tableout.Busbarcorrosion = data(:,56);
tableout.Busbarburnmarks = data(:,57);
tableout.Busbarmisaligned = data(:,58);
tableout.CellInterconnectribbondiscoloration = data(:,59);
tableout.CellInterconnectribboncorrosion = data(:,60);
tableout.CellInterconnectribbonburnmark = data(:,61);
tableout.CellInterconnectribbonbreak = data(:,62);
tableout.StringInterconnectdiscoloration = data(:,63);
tableout.StringInterconnectcorrosion = data(:,64);
tableout.StringInterconnectburnmark = data(:,65);
tableout.StringInterconnectbreak = data(:,66);
tableout.StringInterconnectarctracks = data(:,67);
tableout.Celldiscoloration = data(:,68);
tableout.CellburnMark = data(:,69);
tableout.Cellchippingcrack = data(:,70);
tableout.Cellmoisturepenetration = data(:,71);
tableout.CellwormmarkSnailTracks = data(:,72);
tableout.Cellforeignparticleembedded = data(:,73);
tableout.Interconnectdiscoloration = data(:,74);
tableout.SolderbondFatigueFailureEquipmentneeded = data(:,75);
tableout.Hotspotover20CEquipmentneeded = data(:,76);
tableout.Hotspotlessthan20CEquipmentneeded = data(:,77);
tableout.Encapsulantdelaminationoverthecell = data(:,78);
tableout.Encapsulantdelaminationunderthecell = data(:,79);
tableout.Encapsulantdelaminationoverthejunctionbox = data(:,80);
tableout.Encapsulantdelaminationnearinterconnectorfingers = data(:,81);
tableout.Encapsulantdiscolorationyellowingbrowning = data(:,82);
tableout.ThinFilmModuleDiscoloration = data(:,83);
tableout.ThinFilmModuleDelaminationAbsorberTCOlayer = data(:,84);
tableout.ThinFilmModuleDelaminationARcoating = data(:,85);
tableout.Modulemismatch = data(:,86);

